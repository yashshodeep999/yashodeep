#include <iostream>
#include <vector>
void findSaddlePoint(const std::vector<std::vector<int>>& matrix) {
    int rows = matrix.size();
    int columns = matrix[0].size();
    for (int i = 0; i < rows; i++) {
        int minRowValue = matrix[i][0];
        int minRowColumnIndex = 0;
        for (int j = 1; j < columns; j++) {
            if (matrix[i][j] < minRowValue) {
                minRowValue = matrix[i][j];
                minRowColumnIndex = j;
            }
        }
        bool isSaddlePoint = true;
        for (int k = 0; k < rows; k++) {
            if (matrix[k][minRowColumnIndex] > minRowValue) {
                isSaddlePoint = false;
                break;
            }
        }
        if (isSaddlePoint) {
            std::cout << "Saddle number found: " << minRowValue << std::endl;
            return;
        }
    }
   std::cout << "No saddle point found." << std::endl;
}
int main() {
    std::vector<std::vector<int>> matrix = {
        {4, 5, 6},
        {2, 8, 3},
        {1, 9, 7}
    };
    findSaddlePoint(matrix);
    return 0;
}
